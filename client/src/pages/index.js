import FormField from "@/Components/FormField";
import Loader from "@/Components/Loader";
import Head from "next/head";
import { useState } from "react";
import { AiOutlineSend } from "react-icons/ai";
import { useEffect } from "react";
import Card from "@/Components/Card";

const RenderCards = ({ data, title }) => {
  if (data?.length > 0) {
    return data.map((post) => <Card key={post._id} {...post} />);
  }
};

export default function Home() {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState(null);
  const [searchResults, setSearchResults] = useState(null);
  const [searchText, setSearchText] = useState("");
  const [searchTimeout, setSearchTimeout] = useState(null);

  useEffect(() => {
    const fetchPosts = async () => {
      setLoading(true);

      try {
        const response = await fetch("http://localhost:8080/api/v1/post", {
          method: "GET",
          headers: {
            "Content-Type": "application/json",
          },
        });

        if (response.ok) {
          const result = await response.json();

          setAllPosts(result.data.reverse());
        }
      } catch (e) {
        alert(e);
      } finally {
        setLoading(false);
      }
    };

    fetchPosts();
  }, []);

  const handleSearchChange = (e) => {
    setSearchText(e.target.value);

    setTimeout(() => {
      const searchResults = allPosts.filter(
        (item) =>
          item.name.toLowerCase().includes(searchText.toLowerCase()) ||
          item.prompt.toLowerCase().includes(searchText.toLowerCase())
      );

      setSearchResults(searchResults);
    }, 500);
  };

  return (
    <>
      <Head>
        <title>AI Gallery</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="stylesheet" href="https://rsms.me/inter/inter.css" />
      </Head>
      <section className="max-w-7xl mx-auto">
        <div>
          <h1 className="font-extrabold text-black text-2xl pt-3">
            The Community Showcase
          </h1>
          <p className="text-base mt-2 text-gray-500 max-w-2xl">
            Browse through a collection of imaginative and visually stunning
            images generated by DALL-E AI
          </p>
        </div>

        <div className="mt-16">
          <FormField />
        </div>

        <div>
          {loading ? (
            <div className="flex justify-center items-center">
              <Loader />
            </div>
          ) : (
            <>
              {searchText && (
                <h2 className="text-xl font-medium text-gray-600 mb-3">
                  Showing results for{" "}
                  <span className="text-black">{searchText}</span>
                </h2>
              )}
              <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
                {searchText ? (
                  <RenderCards data={[]} title="No search results found" />
                ) : (
                  <RenderCards data={allPosts} title="No posts found" />
                )}
              </div>
            </>
          )}
        </div>
      </section>
    </>
  );
}
